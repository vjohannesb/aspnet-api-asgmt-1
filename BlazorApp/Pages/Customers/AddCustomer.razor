@page "/customers/add"
@inject ILogger<AddCustomer> _logger
<ValidateToken />

<h3>Register new customer</h3>
<TimeDisplay />
<MessageBox Message="@_message" Error="@_error" />

@if (_customer == null)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="_customer" OnValidSubmit="SubmitCustomer">
        <DataAnnotationsValidator />

        <div class="mb-3">
            <label class="form-label">First Name</label>
            <InputText @bind-Value="@_customer.FirstName" class="form-control" rows="3" />
            <ValidationMessage For="() => _customer.FirstName" />
        </div>

        <div class="mb-3">
            <label class="form-label">Last Name</label>
            <InputText @bind-Value="@_customer.LastName" class="form-control" rows="3" />
            <ValidationMessage For="() => _customer.LastName" />
        </div>

        <div class="mb-3">
            <label class="form-label">Email address</label>
            <InputText @bind-Value="@_customer.Email" class="form-control" rows="3" />
            <ValidationMessage For="() => _customer.Email" />
        </div>

        <button type="submit" class="btn btn-success" disabled=@_submitting>Submit</button>
        <button class="btn btn-secondary ms-2" @onclick="GoToList" disabled=@_submitting>Back to List</button>
    </EditForm>
}

@code {
    private CustomerModel _customer;

    private string _error;
    private string _message;
    private string _location;
    private bool _submitting = false;

    protected override void OnInitialized()
    {
        _customer = new CustomerModel();
    }

    private async Task SubmitCustomer()
    {
        _submitting = true;
        _error = string.Empty;
        _message = string.Empty;
        _location = string.Empty;

        var response = await apiService.SendToAPIAsync(HttpMethod.Post, apiService.CustomersUrl, _customer, true);
        if (response.IsSuccessStatusCode)
            _message = "Customer created!";
        else if (response.StatusCode == HttpStatusCode.Unauthorized)
            navigationManager.NavigateTo("/signin");
        else
        {
            _error = $"Could not create customer. {(int)response.StatusCode} {response.ReasonPhrase}";
            apiService.LogWarningIfDebug(await response.Content.ReadAsStringAsync(), _logger);
        }

        _customer = new CustomerModel();
        _submitting = false;
    }

    private void GoToList()
        => navigationManager.NavigateTo("/customers");
}