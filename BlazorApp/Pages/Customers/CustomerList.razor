@page "/customers"
@inject ILogger<CustomerList> _logger
<ValidateToken />

<h1>Customers</h1>
<TimeDisplay />

<button @onclick="AddCustomer" class="btn btn-secondary mb-3 p-2">
    <span class="oi oi-plus" aria-hidden="true"></span>
    Add customer
</button>

<MessageBox Error="@_error" />

@if (_customers == null || _customers.Length < 1)
{
    <p>@_message</p>
}
else
{

    <table class="table font-monospace">
        <caption>List of customers</caption>
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Email</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in _customers)
            {
                <tr>
                    <td>@customer.CustomerId</td>
                    <td>@customer.DisplayName</td>
                    <td>@customer.Email</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private CustomerViewModel[] _customers;

    private string _message = "Loading...";
    private string _error;

    protected override async Task OnInitializedAsync()
    {
        var response = await apiService.SendToAPIAsync(HttpMethod.Get, apiService.CustomersUrl, auth: true);
        if (response.IsSuccessStatusCode)
        {
            _customers = await response.Content.ReadFromJsonAsync<CustomerViewModel[]>();
            if (_customers.Length < 1)
                _message = "No customers available.";
            else
                _message = string.Empty;
        }
        else
        {
            _error = $"Error loading customers. {(int)response.StatusCode} {response.ReasonPhrase}";
            _message = string.Empty;
            apiService.LogWarningIfDebug(await response.Content.ReadAsStringAsync(), _logger);
        }


    }

    private void AddCustomer()
        => navigationManager.NavigateTo("/customers/add");
}
